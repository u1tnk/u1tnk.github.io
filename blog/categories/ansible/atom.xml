<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ansible | u1tnk.log]]></title>
  <link href="http://u1tnk.github.io/blog/categories/ansible/atom.xml" rel="self"/>
  <link href="http://u1tnk.github.io/"/>
  <updated>2018-04-15T11:20:05+09:00</updated>
  <id>http://u1tnk.github.io/</id>
  <author>
    <name><![CDATA[u1tnk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ansible 勉強会 #1メモ]]></title>
    <link href="http://u1tnk.github.io/blog/2014/06/19/ansible-study-01/"/>
    <updated>2014-06-19T10:35:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2014/06/19/ansible-study-01</id>
    <content type="html"><![CDATA[<p><a href="http://ansible-users.connpass.com/event/5968/">Ansible 勉強会 #1 - connpass</a></p>

<p>に行ってきたのでメモ。資料は↑にほぼあるようです。</p>

<h3>Ansible の基本 + MySQL レプリケーションを設定する事例  by @IanMLewis</h3>

<p>まさに基本。普段使ってるので大体押さえられてた。</p>

<h4>MySQLを構築してみる</h4>

<ul>
<li>bennojoy/ansible-roles ansibleworksの人のリポジトリらしい。参考になりそう。</li>
<li>when あんま使いこなしてないので見とこう。</li>
<li>サンプルyaml見ると、自分のyamlが使いこなして無い感ある…</li>
<li>mysql_replicationモジュールは便利感あるが、ちょっと簡単そうに見えないw 基本の直後に見るのはキツい印象。</li>
</ul>


<h3>dynamic inventoryが便利な話: no more host list!  by  @tagomoris</h3>

<ul>
<li>某巨大メッセージングアプリ企業で普通に使ってるっぽい</li>
<li>エージェントいらないからCentOS5でも動くという理由が大きいらしい。納得。</li>
<li>日本語情報あんま無いのが弱点は同意。っつーか俺書け。</li>
<li>Inventryに普通のvars定義できたという恐らくかなり基本に気づいてなかった…</li>
<li>hoge[1:2].local → hoge1.local…とか使える。</li>
<li>Dyanamic Inventry存在すら気づいてなかった…</li>
<li>ec2用のscriptは既存である。</li>
<li>JSON返すだけなので自作もラク。</li>
<li>ansible.cfg置けば -i不要という事に気づいた。</li>
<li>明日からマネしたい！</li>
<li>2000台完走実績あるらしい。さすが某巨大メッセージングアプリ企業</li>
</ul>


<h4>おまけ</h4>

<p>DynamicInventryでは_meta使って —host はスキップさせるのがオススメ。</p>

<h3>callback pluginを使ったタスク実行時間の可視化について by @rudy</h3>

<ul>
<li>pluginはmoduleと違ってpythonで本体を拡張。</li>
<li>-i “localhost, ” とかできる事に気づいて衝撃。</li>
<li>callback_plugins に入れるだけ。実行ホストに置けば良いのラクだな。</li>
<li>実用上は使わない気がするが、bot連携すると面白いかも。</li>
</ul>


<h3>AnsibleのJUNOS設定モジュールを書いてみた by @saito_hideki</h3>

<p>Ansibleでルータ設定をしているという、まったく参考にはならないが衝撃の発表。</p>

<h3>MSPだってansibleしたい by @LaughK</h3>

<ul>
<li>MSP(運用、保守代行)</li>
<li>客のサーバだからに(ほとんど)何も入れなくて良いという理由。</li>
</ul>


<h3>目指せ、サーバー構築1200台 by @myb1126</h3>

<ul>
<li>採用はエージェントレスが決め手との事。</li>
</ul>


<h3>構成管理ツールAnsibleの構成管理について by @iktakahiro</h3>

<ul>
<li>playbookだけディレクトリ分けるのアリかも。</li>
<li>「冪等性は忘れよう」w</li>
<li>発表されてたのは複雑な気がする…とはいえbest practiceは複数サービスになると厳しいので、考えないとまずそう。</li>
</ul>


<h3>Vagrant × Ansible by @tomohiro_urakawa</h3>

<ul>
<li>inventoryはvagrantが生成すんのか。べんりー</li>
<li>Vagrant provisionで実行</li>
<li>正直言うとそれでもわざわざVagrantに実行させるメリットが見えない…っつーか小さくしか見えない。</li>
</ul>


<h3>chefからansibleに乗り換えた話 by @futoase</h3>

<p>やはりchefより良いのは以下2点
- 対象に何も入れなくて良い
- 上から順に実行されるから分かりやすい → 「孤独なchef使い]になりにくい</p>

<h2>所感</h2>

<ul>
<li>想像しているより使われてる</li>
<li>2000台相手にしても大丈夫というのは安心感ある</li>
<li>やはり採用にあたり大きいのは以下2点

<ul>
<li>対象ホストに何も入れなく良い</li>
<li>「上から実行」という分かり易さ</li>
</ul>
</li>
<li>個人的にはchef等と違ってpush型が基本なので、全サーバに設定ファイル配布…とか小さいところか試しやすいってのも大きい気がする。</li>
</ul>

]]></content>
  </entry>
  
</feed>
