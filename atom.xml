<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[u1tnk.log]]></title>
  <link href="http://u1tnk.github.io/atom.xml" rel="self"/>
  <link href="http://u1tnk.github.io/"/>
  <updated>2017-10-03T20:35:41+09:00</updated>
  <id>http://u1tnk.github.io/</id>
  <author>
    <name><![CDATA[u1tnk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[もともと自営業ですが真の自営業になりました]]></title>
    <link href="http://u1tnk.github.io/blog/2015/10/04/free/"/>
    <updated>2015-10-04T14:27:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2015/10/04/free</id>
    <content type="html"><![CDATA[<p><img src="http://u1tnk.github.io/images/toua.png" alt="violin" /></p>

<p>退職エントリと言うよりお仕事募集エントリです。基本知り合いに読んで欲しくて書きました。</p>

<p>もう4年以上自営業の身分で実質的には企業に所属しておりましたが、この度めでたく真の自営業となりました。<br />
自宅以外に自分の机が無いというのは就職以来初なので不思議な感覚です。</p>

<h2>ここまでの流れ</h2>

<ol>
<li>1000人超メーカ系SI新卒入社</li>
<li>100人ぐらいの会社に転職(当時ベンチャーと思ってたけど、後から考えると大してベンチャー感無い)</li>
<li>50人ぐらいの会社に転職、ここは社風が独特で合いませんでした</li>
<li>10〜50人(在籍中に増えた)ぐらいの会社に転職、ここから自営業扱いだが実質普通の社員</li>
<li>前職に転職。10人ぐらい。ここでも実質社員の自営業</li>
<li>1年程前、副業を認めてもらって週1〜2を副業にあてるようになる</li>
<li>担当していたプロジェクトが事業売却したのを機に本業として関わるのを辞めることにした</li>
</ol>


<p>見事にだんだん小さい会社になって行き、今回でこれ以上は無くなりましたw</p>

<h3>蛇足</h3>

<p>ちなみに最初の某SIは激務でした。詳細は伏せます。<br />
今から考えると健康が一番大事なので体とか心を壊しそうな会社はさっさと辞めましょう！</p>

<h2>理由</h2>

<p>色々考えた結果大体以下3点にまとめられた。
細かいリスト作りましたがちょっとアレだったので身近の酒のネタにでもします。</p>

<ul>
<li>公私のメリハリをきっちり付ける事より時間の自由がある方が好き</li>
<li>経済的に会社に所属するメリットが減ってきた</li>
<li>家族と過ごす時間を増やしたかった</li>
</ul>


<h2>前職について</h2>

<p><a href="http://www.unicon-ltd.com/">Unicon Inc.</a> で働いてました。</p>

<p>結果離れる事になりましたが、自営業なのに社員同様に扱ってくれたり、副業の許可、リモートワーク(これは全員)などとても柔軟に対処してくれました。<br />
もちろん仕事なので含む所も多少はありますが、過去在籍した中で最もストレス無く働けたのは間違い無いので感謝しています。<br />
興味ある方いらっしゃいましたら遊びに行ってみると良いと思います。仲介もします。<br />
また、外注としての仕事があれば連絡お待ちしております！</p>

<h2>今後</h2>

<p>これまで副業としてやってきた案件を引き続きやりますが、確定しているのは30%程度の為お仕事募集中です。</p>

<h3>スキル概要</h3>

<ul>
<li>サーバサイドのインフラ寄りプログラマ</li>
<li>好きな言語はRuby

<ul>
<li>以下1年以上経験のある言語、やりたい訳では無いですが参考まで。

<ul>
<li>Python</li>
<li>Java</li>
<li>lua/CoronaSDK</li>
<li>PHP(でももうやりません)</li>
</ul>
</li>
<li>新しい言語の案件(golang/elixir等)はやってみたい</li>
</ul>
</li>
<li>最近の実績

<ul>
<li>某モバイル向けSDKのサーバサイド(前職)

<ul>
<li>Pythonで顧客向け画面(django)やらSDKからのリクエスト捌くAPIサーバ(tornado)など</li>
<li>AWSでインフラまわり

<ul>
<li>Ansible業含む</li>
</ul>
</li>
</ul>
</li>
<li>新規アプリのサーバサイド全般(副業でサーバサイド一人で対応)

<ul>
<li>Ruby/Rails</li>
<li>AWS構築</li>
<li>APIサーバ</li>
<li>2アプリリリースして運用しています</li>
</ul>
</li>
</ul>
</li>
<li>こんな事もやったことあります

<ul>
<li>CloudSearch</li>
<li>Elasticsearch

<ul>
<li>構築もできはしますが運用結構大変なのを思い知ったので <a href="http://aws.typepad.com/aws_japan/2015/10/amazon-elasticsearch-service.html">Amazon Elasticsearch Service</a>を使った方が良いと思います。</li>
</ul>
</li>
</ul>
</li>
<li>レベルとしては普通。流行りの技術顧問とか無理</li>
<li>デザイン系はできません</li>
<li>Android/iOSアプリはできません</li>
<li>24時間対応はできません</li>
<li>トラブル対応はベストエフォートでなら行います</li>
<li>フロントエンド(css/js)はできますが、最近仕事でやってないのでモダンとか言われると厳しいです</li>
</ul>


<p>現状売りになると思っているのは「小規模、AWS利用のアプリ向けサーバAPI開発ならサーバサイドは一人で構築から全部できる」というところかなと思っています。</p>

<h3>条件</h3>

<ul>
<li>基本リモート(一時的や打ち合わせで伺うのは問題無いです、横浜在住)</li>
<li>70%以下の工数(30%程度しばらく継続して受ける予定の案件があるため)</li>
</ul>


<p>後は応相談です。
連絡は<a href="http://u1tnk.github.io/about/">こちら</a>のSNSのどれかでお願います。</p>

<h2>抱負</h2>

<ul>
<li>これまでより一層健康に気を遣う</li>
<li>社員時代の年収を下回らない</li>
<li>社員時代より労働時間を減らす

<ul>
<li>一人での受託仕事で仕事量オーバーフローすると</li>
<li>家族と一緒に過ごす時間を増やす</li>
<li>同僚というインプット元が減るので意識して学習時間を増やす</li>
</ul>
</li>
<li>自分のサービスで食って行けると最高。esaリスペクト。</li>
</ul>


<h2>一言</h2>

<p>頑張って生き残って行きます</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grapeが良さそうだったけどやめた]]></title>
    <link href="http://u1tnk.github.io/blog/2014/08/14/grape-research/"/>
    <updated>2014-08-14T11:19:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2014/08/14/grape-research</id>
    <content type="html"><![CDATA[<p>RailsでAPI作ってるのでGrapeが良さそうと聞いて調べて、おお！やってみよう！
と思って細かく調べたけど結果やめました。</p>

<h3>参考資料</h3>

<ul>
<li><a href="https://github.com/intridea/grape">https://github.com/intridea/grape</a></li>
<li><a href="http://qiita.com/anoworl/items/756f01cc3d188ebad139">Ruby - RailsとGrapeで行う最高のWeb API開発 - Qiita</a></li>
<li><a href="http://morizyun.github.io/blog/rails-grepe-api-heroku-ruby/">Grape - RailsでスピーディにAPIを作成！ - 酒と泪とRubyとRailsと</a></li>
<li><a href="http://morishitter.hatenablog.com/entry/2014/03/12/033321">Ruby初心者がRailsとGrapeでREST APIを作る - morishitter blog</a></li>
</ul>


<h3>良さそうな点</h3>

<ul>
<li>routes情報と全controllerが一つにまとまるので見易い</li>
<li>versioningやapiのprefix等柔軟に設定できる</li>
</ul>


<h3>微妙なところ</h3>

<ul>
<li>filterにonly,except等が無かった</li>
<li>1ファイルで見通しが良いけども、増え過ぎて分割したら何の為にやったのか感が凄そう</li>
<li>単体で使えるものなのでRailsと重複する機能が多くてもったいない気持ちになる</li>
</ul>


<h3>まとめ</h3>

<p>カバー範囲が違えど、二種のフレームワークを混在して使う事への抵抗が大きかった。大して大きな機能が無いので、だったらRailsのみでシンプルにした方が良いかなと。</p>

<p>Railsと組み合わせて使うなら既存の非APIアプリに追加してシンプルなちょっとしたAPIを作る…とかなら良いのかもという気はしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ansible 勉強会 #1メモ]]></title>
    <link href="http://u1tnk.github.io/blog/2014/06/19/ansible-study-01/"/>
    <updated>2014-06-19T10:35:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2014/06/19/ansible-study-01</id>
    <content type="html"><![CDATA[<p><a href="http://ansible-users.connpass.com/event/5968/">Ansible 勉強会 #1 - connpass</a></p>

<p>に行ってきたのでメモ。資料は↑にほぼあるようです。</p>

<h3>Ansible の基本 + MySQL レプリケーションを設定する事例  by @IanMLewis</h3>

<p>まさに基本。普段使ってるので大体押さえられてた。</p>

<h4>MySQLを構築してみる</h4>

<ul>
<li>bennojoy/ansible-roles ansibleworksの人のリポジトリらしい。参考になりそう。</li>
<li>when あんま使いこなしてないので見とこう。</li>
<li>サンプルyaml見ると、自分のyamlが使いこなして無い感ある…</li>
<li>mysql_replicationモジュールは便利感あるが、ちょっと簡単そうに見えないw 基本の直後に見るのはキツい印象。</li>
</ul>


<h3>dynamic inventoryが便利な話: no more host list!  by  @tagomoris</h3>

<ul>
<li>某巨大メッセージングアプリ企業で普通に使ってるっぽい</li>
<li>エージェントいらないからCentOS5でも動くという理由が大きいらしい。納得。</li>
<li>日本語情報あんま無いのが弱点は同意。っつーか俺書け。</li>
<li>Inventryに普通のvars定義できたという恐らくかなり基本に気づいてなかった…</li>
<li>hoge[1:2].local → hoge1.local…とか使える。</li>
<li>Dyanamic Inventry存在すら気づいてなかった…</li>
<li>ec2用のscriptは既存である。</li>
<li>JSON返すだけなので自作もラク。</li>
<li>ansible.cfg置けば -i不要という事に気づいた。</li>
<li>明日からマネしたい！</li>
<li>2000台完走実績あるらしい。さすが某巨大メッセージングアプリ企業</li>
</ul>


<h4>おまけ</h4>

<p>DynamicInventryでは_meta使って —host はスキップさせるのがオススメ。</p>

<h3>callback pluginを使ったタスク実行時間の可視化について by @rudy</h3>

<ul>
<li>pluginはmoduleと違ってpythonで本体を拡張。</li>
<li>-i “localhost, ” とかできる事に気づいて衝撃。</li>
<li>callback_plugins に入れるだけ。実行ホストに置けば良いのラクだな。</li>
<li>実用上は使わない気がするが、bot連携すると面白いかも。</li>
</ul>


<h3>AnsibleのJUNOS設定モジュールを書いてみた by @saito_hideki</h3>

<p>Ansibleでルータ設定をしているという、まったく参考にはならないが衝撃の発表。</p>

<h3>MSPだってansibleしたい by @LaughK</h3>

<ul>
<li>MSP(運用、保守代行)</li>
<li>客のサーバだからに(ほとんど)何も入れなくて良いという理由。</li>
</ul>


<h3>目指せ、サーバー構築1200台 by @myb1126</h3>

<ul>
<li>採用はエージェントレスが決め手との事。</li>
</ul>


<h3>構成管理ツールAnsibleの構成管理について by @iktakahiro</h3>

<ul>
<li>playbookだけディレクトリ分けるのアリかも。</li>
<li>「冪等性は忘れよう」w</li>
<li>発表されてたのは複雑な気がする…とはいえbest practiceは複数サービスになると厳しいので、考えないとまずそう。</li>
</ul>


<h3>Vagrant × Ansible by @tomohiro_urakawa</h3>

<ul>
<li>inventoryはvagrantが生成すんのか。べんりー</li>
<li>Vagrant provisionで実行</li>
<li>正直言うとそれでもわざわざVagrantに実行させるメリットが見えない…っつーか小さくしか見えない。</li>
</ul>


<h3>chefからansibleに乗り換えた話 by @futoase</h3>

<p>やはりchefより良いのは以下2点
- 対象に何も入れなくて良い
- 上から順に実行されるから分かりやすい → 「孤独なchef使い]になりにくい</p>

<h2>所感</h2>

<ul>
<li>想像しているより使われてる</li>
<li>2000台相手にしても大丈夫というのは安心感ある</li>
<li>やはり採用にあたり大きいのは以下2点

<ul>
<li>対象ホストに何も入れなく良い</li>
<li>「上から実行」という分かり易さ</li>
</ul>
</li>
<li>個人的にはchef等と違ってpush型が基本なので、全サーバに設定ファイル配布…とか小さいところか試しやすいってのも大きい気がする。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EC2インスタンス価格の必要なところだけ表にしてみた]]></title>
    <link href="http://u1tnk.github.io/blog/2014/04/17/aws-price/"/>
    <updated>2014-04-17T22:45:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2014/04/17/aws-price</id>
    <content type="html"><![CDATA[<h2>何？</h2>

<p>EC2の価格表で以下が欲しかったので作った。</p>

<p>2月にほぼ手作業で同じようなデータ作ったけど、大幅値下げで既に使いものにならなくなったので業を煮やした。いや値下げは嬉しいんだけど。</p>

<p>同様にネットで見かけるまとめも見やすいものは古くなってたり…</p>

<p>以下公式の不満。</p>

<ul>
<li>一画面でECUとかGiBとか比較できない</li>
<li>リザーブドインスタンスにしたときのならし月額(一括払いを月額に按分して時間分と足す)が欲しい(見積りツールにはある)</li>
<li>オンデマンドとリザーブドインスタンスどんぐらい違うか見たい</li>
<li>ECUあたりとかメモリあたりの単価も比較したい</li>
<li>3年とかさすがに使えないのでいらない</li>
<li>中度とか軽度買うぐらいならオンデマンドで良いのでいらない</li>
<li>このページのもデザイン的に見やすくないのでSpreadSheetなりに貼りつけて利用を推奨。(以下リンク先のCSSゼロの方がまだ見やすいという…)

<ul>
<li>やはりみづらいのでgoogle spread sheetに貼りつけた <a href="https://docs.google.com/spreadsheets/d/1QzsUHO4Nd07TL5FAnVM2yvLRa3uOslY7pDTrmhwuAf0/edit?usp=sharing">https://docs.google.com/spreadsheets/d/1QzsUHO4Nd07TL5FAnVM2yvLRa3uOslY7pDTrmhwuAf0/edit?usp=sharing</a></li>
</ul>
</li>
</ul>


<h2>どうやった？</h2>

<p>以下ページのJSでHTML化。このページのはスナップショットとしてコピペ。
<a href="https://dl.dropboxusercontent.com/u/3400756/aws_price.html">https://dl.dropboxusercontent.com/u/3400756/aws_price.html</a></p>

<ul>
<li>料金表のページのソースを見るとJSONPで呼んでたので使わせてもらった。おそらく外部利用を想定してないので止まっても文句は言いません。(見れなくなったら困るのでコピペった)</li>
</ul>


<h2>表について</h2>

<ul>
<li>RI = リザーブドインスタンス一年重度使用</li>
<li>OD = オンデマンド(普通)</li>
<li>m1.small比OD価格のm1.small比。</li>
<li>安い順にソートしている。ファミリー毎の方がコスパとか見やすかったかも。</li>
</ul>


<h2>内容感想</h2>

<ul>
<li>m1.medium/m1.largeが消えてた…別ページにあるんだろうけど。</li>
<li>m1.small、特殊用途のhs以外全てSSD化してた。HDDは死んだ…</li>
<li>m1.small、単価見ると高い！しょぼい用途には使うけど…</li>
<li>m3.mediumも2月時点のm1.small(RIならしで約$34だった)と大差無い。</li>
<li>2月時点のm1.mediumよりC3.largeが安いってw m1.mediumのリザーブドインスタンスどうしろと…</li>
<li>c3.largeがオンデマンドでも月一万切る上、メモリ/ECU共にコスパ高い!</li>
<li>large以上は特段コスパ良くなったりはしない。</li>
<li>m3の中途半端さ。largeならc3かr3使うと思う。</li>
</ul>


<h2>4/17時点の価格表</h2>

<table id="result" border="1">
    <tbody><tr>
        <th>size</th>
        <th>vCPU</th>
        <th>ECU</th>
        <th>memoryGiB</th>
        <th>storageGB</th>
        <th>RI一括</th>
        <th>RI/時間</th>
        <th>RIならし月額</th>
        <th>OD時間</th>
        <th>OD月額</th>
        <th>OD m1.small比</th>
        <th>OD月額/ECU</th>
        <th>OD月額/GiB</th>
    </tr>
<tr><td align="left">t1.micro</td><td align="right">1</td><td align="right">variable</td><td align="right">0.615</td><td align="right">ebsonly</td><td align="right">62</td><td align="right">0.009</td><td align="right">11.64</td><td align="right">0.026</td><td align="right">18.72</td><td align="right">0.42</td><td align="right">NaN</td><td align="right">30.43</td></tr>
<tr><td align="left">m1.small</td><td align="right">1</td><td align="right">1</td><td align="right">1.7</td><td align="right">1 x 160</td><td align="right">135</td><td align="right">0.017</td><td align="right">23.49</td><td align="right">0.061</td><td align="right">43.92</td><td align="right">1</td><td align="right">43.92</td><td align="right">25.83</td></tr>
<tr><td align="left">m3.medium</td><td align="right">1</td><td align="right">3</td><td align="right">3.75</td><td align="right">1 x 4 SSD</td><td align="right">244</td><td align="right">0.03</td><td align="right">41.93</td><td align="right">0.101</td><td align="right">72.72</td><td align="right">1.65</td><td align="right">24.24</td><td align="right">19.39</td></tr>
<tr><td align="left">c3.large</td><td align="right">2</td><td align="right">7</td><td align="right">3.75</td><td align="right">2 x 16 SSD</td><td align="right">357</td><td align="right">0.047</td><td align="right">63.59</td><td align="right">0.128</td><td align="right">92.16</td><td align="right">2.09</td><td align="right">13.16</td><td align="right">24.57</td></tr>
<tr><td align="left">m3.large</td><td align="right">2</td><td align="right">6.5</td><td align="right">7.5</td><td align="right">1 x 32 SSD</td><td align="right">487</td><td align="right">0.061</td><td align="right">84.5</td><td align="right">0.203</td><td align="right">146.16</td><td align="right">3.32</td><td align="right">22.48</td><td align="right">19.48</td></tr>
<tr><td align="left">r3.large</td><td align="right">2</td><td align="right">6.5</td><td align="right">15</td><td align="right">1 x 32 SSD</td><td align="right">777</td><td align="right">0.048</td><td align="right">99.31</td><td align="right">0.210</td><td align="right">151.19</td><td align="right">3.44</td><td align="right">23.26</td><td align="right">10.08</td></tr>
<tr><td align="left">c3.xlarge</td><td align="right">4</td><td align="right">14</td><td align="right">7.5</td><td align="right">2 x 40 SSD</td><td align="right">713</td><td align="right">0.094</td><td align="right">127.09</td><td align="right">0.255</td><td align="right">183.6</td><td align="right">4.18</td><td align="right">13.11</td><td align="right">24.48</td></tr>
<tr><td align="left">m3.xlarge</td><td align="right">4</td><td align="right">13</td><td align="right">15</td><td align="right">2 x 40 SSD</td><td align="right">973</td><td align="right">0.123</td><td align="right">169.64</td><td align="right">0.405</td><td align="right">291.6</td><td align="right">6.63</td><td align="right">22.43</td><td align="right">19.44</td></tr>
<tr><td align="left">r3.xlarge</td><td align="right">4</td><td align="right">13</td><td align="right">30.5</td><td align="right">1 x 80 SSD</td><td align="right">1554</td><td align="right">0.096</td><td align="right">198.62</td><td align="right">0.420</td><td align="right">302.39</td><td align="right">6.88</td><td align="right">23.26</td><td align="right">9.91</td></tr>
<tr><td align="left">c3.2xlarge</td><td align="right">8</td><td align="right">28</td><td align="right">15</td><td align="right">2 x 80 SSD</td><td align="right">1427</td><td align="right">0.188</td><td align="right">254.27</td><td align="right">0.511</td><td align="right">367.91</td><td align="right">8.37</td><td align="right">13.13</td><td align="right">24.52</td></tr>
<tr><td align="left">m3.2xlarge</td><td align="right">8</td><td align="right">26</td><td align="right">30</td><td align="right">2 x 80 SSD</td><td align="right">1948</td><td align="right">0.246</td><td align="right">339.45</td><td align="right">0.810</td><td align="right">583.2</td><td align="right">13.27</td><td align="right">22.43</td><td align="right">19.44</td></tr>
<tr><td align="left">r3.2xlarge</td><td align="right">8</td><td align="right">26</td><td align="right">61</td><td align="right">1 x 160 SSD</td><td align="right">3108</td><td align="right">0.192</td><td align="right">397.24</td><td align="right">0.840</td><td align="right">604.79</td><td align="right">13.77</td><td align="right">23.26</td><td align="right">9.91</td></tr>
<tr><td align="left">g2.2xlarge</td><td align="right">8</td><td align="right">26</td><td align="right">15</td><td align="right">60 SSD</td><td align="right">3406</td><td align="right">0.21</td><td align="right">435.03</td><td align="right">0.898</td><td align="right">646.55</td><td align="right">14.72</td><td align="right">24.86</td><td align="right">43.1</td></tr>
<tr><td align="left">i2.xlarge</td><td align="right">4</td><td align="right">14</td><td align="right">30.5</td><td align="right">1 x 800 SSD</td><td align="right">2670</td><td align="right">0.228</td><td align="right">386.66</td><td align="right">1.001</td><td align="right">720.71</td><td align="right">16.4</td><td align="right">51.48</td><td align="right">23.63</td></tr>
<tr><td align="left">c3.4xlarge</td><td align="right">16</td><td align="right">55</td><td align="right">30</td><td align="right">2 x 160 SSD</td><td align="right">2854</td><td align="right">0.375</td><td align="right">507.83</td><td align="right">1.021</td><td align="right">735.11</td><td align="right">16.73</td><td align="right">13.36</td><td align="right">24.5</td></tr>
<tr><td align="left">r3.4xlarge</td><td align="right">16</td><td align="right">52</td><td align="right">122</td><td align="right">1 x 320 SSD</td><td align="right">6216</td><td align="right">0.384</td><td align="right">794.48</td><td align="right">1.680</td><td align="right">1209.59</td><td align="right">27.54</td><td align="right">23.26</td><td align="right">9.91</td></tr>
<tr><td align="left">i2.2xlarge</td><td align="right">8</td><td align="right">27</td><td align="right">61</td><td align="right">2 x 800 SSD</td><td align="right">5339</td><td align="right">0.456</td><td align="right">773.23</td><td align="right">2.001</td><td align="right">1440.72</td><td align="right">32.8</td><td align="right">53.36</td><td align="right">23.61</td></tr>
<tr><td align="left">c3.8xlarge</td><td align="right">32</td><td align="right">108</td><td align="right">60</td><td align="right">2 x 320 SSD</td><td align="right">5708</td><td align="right">0.75</td><td align="right">1015.66</td><td align="right">2.043</td><td align="right">1470.96</td><td align="right">33.49</td><td align="right">13.62</td><td align="right">24.51</td></tr>
<tr><td align="left">r3.8xlarge</td><td align="right">32</td><td align="right">104</td><td align="right">244</td><td align="right">2 x 320 SSD</td><td align="right">12432</td><td align="right">0.768</td><td align="right">1588.96</td><td align="right">3.360</td><td align="right">2419.19</td><td align="right">55.08</td><td align="right">23.26</td><td align="right">9.91</td></tr>
<tr><td align="left">i2.4xlarge</td><td align="right">16</td><td align="right">53</td><td align="right">122</td><td align="right">4 x 800 SSD</td><td align="right">10677</td><td align="right">0.91</td><td align="right">1544.95</td><td align="right">4.002</td><td align="right">2881.44</td><td align="right">65.6</td><td align="right">54.36</td><td align="right">23.61</td></tr>
<tr><td align="left">hs1.8xlarge</td><td align="right">16</td><td align="right">35</td><td align="right">117</td><td align="right">24 x 2048</td><td align="right">12822</td><td align="right">1.317</td><td align="right">2016.73</td><td align="right">5.400</td><td align="right">3888</td><td align="right">88.52</td><td align="right">111.08</td><td align="right">33.23</td></tr>
<tr><td align="left">i2.8xlarge</td><td align="right">32</td><td align="right">104</td><td align="right">244</td><td align="right">8 x 800 SSD</td><td align="right">21354</td><td align="right">1.822</td><td align="right">3091.34</td><td align="right">8.004</td><td align="right">5762.88</td><td align="right">131.21</td><td align="right">55.41</td><td align="right">23.61</td></tr>
</tbody></table>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Team Geek読んだ]]></title>
    <link href="http://u1tnk.github.io/blog/2014/03/20/team-geek/"/>
    <updated>2014-03-20T10:34:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2014/03/20/team-geek</id>
    <content type="html"><![CDATA[<p>同僚に貸して頂いて読みました。感謝。</p>

<p>Googleの中の人がチーム開発するにあたってどういう事を心がけているか？という本。
プログラマ本だけどプログラマ専用の内容は少なめ。一部削れば自己啓発書コーナーにあっても不思議じゃない。</p>

<ul>
<li>とにかくHRT(信頼 Humility、尊敬 Respect、謙虚 Trust)</li>
<li>有害な人対策なども。無自覚なのも含めて難しい問題だと実感。有害な人対策自体も参考になるが、自分も有害になってないか？で心が痛い。</li>
<li>採用は妥協しない、チームメイトになったら大人として扱う。</li>
<li>ミッションステートメントは共有はもちろん今自分がしっかり理解しているとは言えないなぁ…</li>
<li>かなり社内政治についても書いてる。必要悪的ではあるが。</li>
</ul>


<p>面白かったし、色々参考になった。
自省としては、HRTはやってるつもりだけど、嗜好が合わないと謙虚さが失われがちなので気をつけようと。</p>

<p><a href="http://www.amazon.co.jp/gp/product/4873116309/ref=as_li_ss_il?ie=UTF8&camp=247&creative=7399&creativeASIN=4873116309&linkCode=as2&tag=u1tnk-22"><img border="0" src="http://ecx.images-amazon.com/images/I/41SlY0zvpKL._SL160_.jpg" ></a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=u1tnk-22&l=as2&o=9&a=4873116309" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JAWS DAYS 2014に行ってきました]]></title>
    <link href="http://u1tnk.github.io/blog/2014/03/15/jawsdays2014/"/>
    <updated>2014-03-15T20:47:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2014/03/15/jawsdays2014</id>
    <content type="html"><![CDATA[<h2>Immutable Infrastructure</h2>

<p>JAWS DAYS 2014、Immutable Infrastructure について - naoyaのはてなダイアリー <a href="http://d.hatena.ne.jp/naoya/20140315/1394851727">http://d.hatena.ne.jp/naoya/20140315/1394851727</a></p>

<p>めっちゃ人居ました。個人的にrebuild.fm全部聞いてるのでほとんど聞いてたので割愛w</p>

<h2>クックパッドのデプロイとオートスケール</h2>

<p>個人的一番勉強になったセッション。</p>

<p>Cookpad&rsquo;s deployment and auto scaling // Speaker Deck <a href="https://speakerdeck.com/mirakui/cookpads-deployment-and-auto-scaling">https://speakerdeck.com/mirakui/cookpads-deployment-and-auto-scaling</a></p>

<ul>
<li>nameタグ、hostnameは起動時に自動採取

<ul>
<li>→これはすぐにでも真似したい。</li>
</ul>
</li>
<li>roleタグというのをつけてデプロイ内容をコントロール

<ul>
<li>→ふむふむ</li>
</ul>
</li>
<li>Nameタグからip収集してpowerdnsで管理。

<ul>
<li>→そうしたいよね…</li>
</ul>
</li>
<li><p>ec2からタグ情報取得するApiのImitに到達するらしいw キャッシュしてるとのこと</p></li>
<li><p>Amazon AutoScaling使って無くて自作！</p>

<ul>
<li>CloudWatchが最短一分で秒単位で取得したい

<ul>
<li>そこまで必要なのか…</li>
</ul>
</li>
<li>graceful terminate問題

<ul>
<li>それは確かに。多少のリクエストなら負荷で落ちるよりマシと思ってやってるが…</li>
</ul>
</li>
<li>ELBでは無くhaproxy使いたい。…

<ul>
<li>haproxyの方が良いそうな。</li>
<li>ブラックボックスで問題起こったらよくわからんってのは確かに。</li>
</ul>
</li>
<li> デプロイとにAutoScaalingと排他制御するため

<ul>
<li>動くとやばいので、排他制御してると。ほー。デプロイ多いからこその問題。</li>
</ul>
</li>
</ul>
</li>
<li><p>問題調査のための、staticインスタンスとしてAutoScaleとは別管理のインスタンスがある。</p>

<ul>
<li>確かに。システムログとか見るヒマ無く勝手に落ちるからな…Amazon Autoscalingでもできるからやりたい</li>
</ul>
</li>
<li><p>蛇足</p>

<ul>
<li>chefじゃなくてpuppet使ってるらしい。なんでだろ。</li>
<li>cookpadもhipchatoとのこと</li>
</ul>
</li>
</ul>


<h2>プロビジョニング＆デプロイ on AWSのキホン</h2>

<p>The Basics of Provisioning and Deploy on AWS #jawdays #infra <a href="http://www.slideshare.net/Ryuzee/the-basics-of-provisioning-and-deploy-on-aws-jawdays-infra">http://www.slideshare.net/Ryuzee/the-basics-of-provisioning-and-deploy-on-aws-jawdays-infra</a>
特段目新しい内容は無かったが、とにかく耳の痛い正論セッションでした。</p>

<ul>
<li>自動化しないリスク、コストを過少評価し過ぎ</li>
<li>自動化するなら最初から。デプロイするときに考えるじゃ遅い</li>
<li>自動化しない→ミスる→チェック増やす→コスト増える→＼(^o^)／</li>
<li>デプロイアンチパターン、手作業混合。

<ul>
<li>→これはやっちゃう…</li>
</ul>
</li>
<li>テスト自動化！小さい粒度でリリース！</li>
<li>sunsu+graphite良いと。</li>
</ul>


<h2>カジュアルにVPC作った結果がこれだよ！</h2>

<p><a href="http://www.slideshare.net/Yuryu/aws-casual-talks-1-vpc">http://www.slideshare.net/Yuryu/aws-casual-talks-1-vpc</a>
行ってないけど、資料流れてきたらめっちゃ気になってた事なので勉強になった。
カジュアルには行けない事が良くわかったw</p>

<h2>20140315 JAWS DAYS 2014 ACEに聞け！ CloudFormation編</h2>

<p><a href="http://www.slideshare.net/daisuke_m/20140315-jaws-days-2014acecfn">http://www.slideshare.net/daisuke_m/20140315-jaws-days-2014acecfn</a></p>

<p>2番目に勉強になった。</p>

<ul>
<li>やっぱ基本は一発作るのがメインのものなんだ</li>
<li>とはいえ、UPDATE_STACKでメンテしていける。</li>
<li>UPDATE_STACKちゃんとせず、手でメンテすると詰むと。ウチのは完全詰んでるからどっかで精算せねばw</li>
<li>BLUE-GREEN deploymentを CludFormationだけで実行するデモ。ここまでできると素晴しいなぁ…</li>
<li>とはいえjsonの定義見るのキツいわw AWS CloudFormation tempate for PHP Blue-Green Deployment environment <a href="https://gist.github.com/miyamoto-daisuke/9544801">https://gist.github.com/miyamoto-daisuke/9544801</a></li>
</ul>


<h1>Immutable Infrastracture パネルディスカッション〜オレにも一言言わせろ〜</h1>

<p>人大杉…立ち見でも厳しそうだったので断念。</p>

<h2>まとめ</h2>

<ul>
<li>すぐに手をつけたいのはchef/powerdns/cloudformation/tag利用…あたりかなぁ。山積みすぎる…</li>
<li>人の多さと会場の割り当てに疑問を感じる。立ち見2回で足痛い…</li>
<li>AWS面白い。改善頑張ろう。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nasne+iOSは無茶苦茶便利だがTwonkeyBeamは使わない方が幸せ。黙ってDixim使っとけ！]]></title>
    <link href="http://u1tnk.github.io/blog/2013/07/28/nasne/"/>
    <updated>2013-07-28T23:11:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2013/07/28/nasne</id>
    <content type="html"><![CDATA[<p>nasne良さそうだけど、torne持ってるし録画サーバあるしいらんと思ってたけど、録画サーバが壊れた(たぶんPT2の故障)ので検討。</p>

<ol>
<li>PT2買い替えでなおる気がするけど、実はソフト側の問題でハマったら辛い。</li>
<li>そもそもPT2+ubuntu環境も結構不安定。番組によっては変換でよくハマってたし。</li>
<li>以下の記事見て自分の用途(PS3/iPad/iPhoneで見る、たまに持ち出し)が全て満たされると確信。</li>
</ol>


<p><a href="http://blog.kushii.net/archives/1803070.html">年末年始の特番対策に PS3＋torne+nasne で録画環境を強化してみたら外から録画予約も出来るようになったし超満足した件 - 941::blog</a></p>

<h2>設置</h2>

<ol>
<li>アンテナ挿す</li>
<li>B-CAS挿す</li>
<li>電源挿す
こんだけ、簡単！</li>
</ol>


<h2>設定</h2>

<ul>
<li>ブラウザで機器設定<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>

<ul>
<li>チャンネルスキャン</li>
<li>ネットワーク設定</li>
<li>予約サービスCHAN-TORU登録

<ul>
<li>外部予約用だが、PS3無い人はこれで予約すれば良い</li>
<li>google/twitterアカウント使えるので登録ラク。</li>
<li>PS3トルネアプリでnasne登録</li>
</ul>
</li>
</ul>
</li>
</ul>


<h2>PS3/torneアプリの存在意義</h2>

<p>ここで、torneとはtorneアプリの事であり、PS3外付けチューナ製品の事では無い、そちらはtorneチューナと呼ぶ。</p>

<p>結論から言うとPS3持ってるなら使うだけのメリットはある。</p>

<p>が、持ってなくてメイン視聴がiOSもしくはDLNA機器(DTCP-IP対応)なら買う程では無い。</p>

<p>torneチューナは既に持ってる人なら併用するとダブルチューナの意味はある。が、持ってなければnasne買い足しの方が良い。</p>

<h3>メリット</h3>

<ul>
<li>録画管理機能使える(予約管理は上述のCHAN-TORUでもできる)</li>
<li>番組表サクサク便利</li>
<li>torneチューナと予約/データを統合管理</li>
<li>torneチューナあるときはここで予約して時間が重複したらtorneチューナで録画してくれる</li>
<li>未/既視聴管理ができる</li>
</ul>


<h3>デメリット</h3>

<ul>
<li>torneアプリ、PS3共に起動遅い</li>
</ul>


<h2>torneチューナ運用時との比較で意外に良かったところ</h2>

<p><strong>録画にPS3起動が必要無い!</strong></p>

<p>ささいなようで素晴らしい。突然鳴り響くファンの音に怯える事も無い。部屋も暑くならないんだ！</p>

<h2>Twonkey Beamと Dixim digital TV</h2>

<p>どちらもiOSでDTCP-IP対応DLNAクライアントで、LAN内でnasneの動画が見れます。ライブチューナでTVも見れます。
が、決定的に「品質」が違います。</p>

<p>以下起動した直後のスクショ。
こちらがDixim</p>

<p><img src="http://u1tnk.github.io/images/nasne/dixim.jpg" alt="icon" /></p>

<p>で、こちらがTwonkey</p>

<p><img src="http://u1tnk.github.io/images/nasne/twonkey.jpg" alt="icon" /></p>

<p>どちらがnasneで動画再生するのにわかりやすいかなんて一目瞭然ですね。
ちなみにまずは右上のちっさーーーいwifiアイコンをクリックするのが正解です。</p>

<p>これからも万事この調子。</p>

<ul>
<li>普通に見るのも、ダウンロードするのも「Beam」するんです！意味がわかりません。</li>
<li>再生中にsuspend-resumeするとよく固まります。</li>
<li>番組によっては再生できません。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></li>
<li>30秒スキップなんて親切機能はありません。頑張って指で調整して早送りした結果固まります。</li>
<li>固まらなくてもBeam失敗したときにエラーポップアップすら出ない事が多い。静かにエラー起きてるっぽい。</li>
</ul>


<p>レビュー記事でTwonkeyはUIがちょっとよくない…とか書いてるのを見た事あるけど、</p>

<p><strong>ひどいUIを頑張って理解した結果、UIだけじゃなくて品質自体が悪い事を理解してしまう。</strong>が現実でした。</p>

<p>一方Diximの方は普通です。ちゃんとしてます。「番組によっては固まる」事があるのみ発生しましたが頻度が違います。
オススメできます</p>

<h2>それでもダウンロードムーブしたい！</h2>

<p>iOSでのダウンロードムーブは2013/07現在Twonkeyしか対応していません。</p>

<p>どうしても持ち出したい！という事であればTwonkeyしか選択肢が無いのです。残念ながら…</p>

<p>私も最初は我慢して使おうと思ってました。…が、</p>

<ul>
<li>再生できない事がある</li>
<li>早送りができない(できるけど、調整がめんどい&amp;固まるリスク)</li>
<li>中断するとresumeで固まるリスク、更に早送りで固まるリスク</li>
</ul>


<p>…めんどくさすぎてほとんど使ってません。</p>

<h2>まとめ</h2>

<p>iPad+nasne+Diximを家で使うのは非常に快適です。リビングも静かになったし買って良かった。</p>

<p>TwonkeyBeamはどうしてもダウンロードムーブがしたくて、ダウンロードしけど見れなかったりしても平気なM気質の方のみオススメです。</p>

<p>普通の人は素直にDiximがダウンロードムーブに対応するのを祈りましょう。</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>ブラウザ設定はIP直指定でできるが、最初はわからんので、PS3のDLNAサーバのところで△→設定選択で設定画面を起動できる。持ってなくてもデフォルトでsambaもDLNAも動いてるようなのでどれかでIPわかればおk<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>最初からとか、CMから本編行くときとかによく固まります。個人的印象で2,3割程度の番組で発生。<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby2.0.0+Rails4.0+MySQLなrailsアプリをherokuにデプロイ(2013/7月版)]]></title>
    <link href="http://u1tnk.github.io/blog/2013/07/28/heroku-rails4/"/>
    <updated>2013-07-28T22:22:00+09:00</updated>
    <id>http://u1tnk.github.io/blog/2013/07/28/heroku-rails4</id>
    <content type="html"><![CDATA[<p>久しぶりにheroku触ってみるとassetでハマることも無く、ruby2.0.0使うのも一行。
すごい簡単になってるけど、結構変わってるしメモ。</p>

<p>MySQL使ってるのはこだわりも無いけど、cleardb簡単そうだし、デメリットは初期設定ぐらいっぽいので慣れてる方にしただけ。
heroku標準postgresの制限に行数があるけど、こちらは容量だけってのも微妙に気になった。</p>

<h2>heroku基本設定</h2>

<p><a href="https://toolbelt.heroku.com/">https://toolbelt.heroku.com/</a> からダウンロード</p>

<p>gem i herokuは非推奨らしい</p>

<p>基本以下参照</p>

<p><a href="https://devcenter.heroku.com/articles/rails3">https://devcenter.heroku.com/articles/rails3</a></p>

<h2>Gemfile</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># herokuに2.0.0使用を指示</span>
</span><span class='line'>ruby <span class="s1">&#39;2.0.0&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ローカルでもsqlite3よりmysqlの方が好き、cleardb使うので全てmysql2</span>
</span><span class='line'>gem <span class="s1">&#39;mysql2&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>herokuアプリ作成</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>heroku login
</span><span class='line'>heroku create hoge
</span><span class='line'>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<h2>cleardb(MySQLプラグイン) 設定</h2>

<p>以下のドキュメントに従う
<a href="https://devcenter.heroku.com/articles/cleardb">https://devcenter.heroku.com/articles/cleardb</a></p>

<ul>
<li>addon追加、無課金範囲でもherokuにクレジットカード登録しないとエラーになるので注意</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>heroku addons:add cleardb:ignite
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>herokuから作成されたcleardbのurlを取得</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>heroku config <span class="p">|</span> grep CLEARDB_DATABASE_URL
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>上記で調べたURLをmysql://→mysql2://として設定<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>heroku config:set <span class="nv">DATABASE_URL</span><span class="o">=</span><span class="s1">&#39;mysql2://hoge:fuga@us-cdbr-east.cleardb.com/heroku_db?reconnect=true&#39;</span>
</span><span class='line'>heroku run rake db:migrate
</span></code></pre></td></tr></table></div></figure>


<h2>動作確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>heroku open
</span></code></pre></td></tr></table></div></figure>



<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>上記コマンドでもドキュメントにもmysql://&hellip;と書いてあるが、mysql2://&hellip;にしないとエラーになった。<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
