<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rails on u1tnk.log</title>
    <link>https://u1tnk.github.io/categories/rails/</link>
    <description>Recent content in rails on u1tnk.log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 14 Aug 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://u1tnk.github.io/categories/rails/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Grapeが良さそうだったけどやめた</title>
      <link>https://u1tnk.github.io/blog/2014/08/14/grape-research/</link>
      <pubDate>Thu, 14 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://u1tnk.github.io/blog/2014/08/14/grape-research/</guid>
      <description>RailsでAPI作ってるのでGrapeが良さそうと聞いて調べて、おお！やってみよう！ と思って細かく調べたけど結果やめました。
参考資料  https://github.com/intridea/grape Ruby - RailsとGrapeで行う最高のWeb API開発 - Qiita Grape - RailsでスピーディにAPIを作成！ - 酒と泪とRubyとRailsと Ruby初心者がRailsとGrapeでREST APIを作る - morishitter blog  良さそうな点  routes情報と全controllerが一つにまとまるので見易い versioningやapiのprefix等柔軟に設定できる  微妙なところ  filterにonly,except等が無かった 1ファイルで見通しが良いけども、増え過ぎて分割したら何の為にやったのか感が凄そう 単体で使えるものなのでRailsと重複する機能が多くてもったいない気持ちになる  まとめ カバー範囲が違えど、二種のフレームワークを混在して使う事への抵抗が大きかった。大して大きな機能が無いので、だったらRailsのみでシンプルにした方が良いかなと。
Railsと組み合わせて使うなら既存の非APIアプリに追加してシンプルなちょっとしたAPIを作る…とかなら良いのかもという気はしました。</description>
    </item>
    
  </channel>
</rss>